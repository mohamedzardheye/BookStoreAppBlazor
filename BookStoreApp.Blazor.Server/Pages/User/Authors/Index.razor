@page "/authors/index"
@inject IAuthorService authorService;


<h3>Index</h3>


@if (response.Success == false)
{
    <div class="alert alert-danger">
        <p><em>@response.Message</em></p>
    </div>
   
}

@if(Authors == null){
    <p><em>Loading Data...</em></p>
}
else
{
    <a class="btn btn-primary" href="authors/create"> <span class="oi oi-plus" aria-hidden="false"></span> Create New</a>
    <br/>

    <table class="table">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Action</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-secondary"  href="/authors/details">  <span class="oi oi-book" aria-hidden="false"></span> details</a>
                        <a class="btn btn-warning"  href="/authors/edit"><span class="oi oi-pencil" aria-hidden="false"></span> edit</a>
                        <a class="btn btn-danger"  href="/authors/delete"> <span class="oi oi-delete" aria-hidden="false"></span> delete</a>

                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<AuthorReadOnlyDto> Authors;

    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>> {Success = true};

    protected override async Task OnInitializedAsync()
    {
         response = await authorService.GetAuthors();
        if(response.Success)
        {
            Authors = response.data;
        }
    }

}
