@page "/user/login"
@using static System.Net.WebRequestMethods
@inject IAuthenticationService authService
@inject NavigationManager navManager
@layout EmptyLayout
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations


<h3>Login</h3>


<div>

    <MudPaper Height="400px" Width="100%">
    <MudContainer MaxWidth="MaxWidth.Small">


        <MudGrid>
            <MudItem xs="12" sm="7">
                <MudPaper Class="pa-4">

    <EditForm Model="@LoginModel" OnValidSubmit="HandleLogin">
        <DataAnnotationsValidator />
        <ValidationSummary />


        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="Email" class="form-control" @bind-Value="LoginModel.Email" />
            <ValidationMessage For="@(() => LoginModel.Email)" />
        </div>

        <div class="form-group">
            <label for="Password">Password</label>
            <InputText id="Password" type="password" class="form-control" @bind-Value="LoginModel.Password" />
            <ValidationMessage For="@(() => LoginModel.Password)" />

        </div>
        <button type="submit" class="btn btn-primary btn-block">Login</button>


    </EditForm>

    </MudPaper>
    </MudItem>
    </MudGrid>
              

    </MudContainer>
    </MudPaper>

</div>

@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = null;

   

    public async Task HandleLogin()
    {
        try
        {
        var response = await authService.AuthenticateAsync(LoginModel);
       
            if (response)
            {
                navManager.NavigateTo("/dashboard");
            }
            else
            {
               message = "Invalid Creditianls";
                Console.WriteLine(message);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

}
