@page "/user/login"
@using static System.Net.WebRequestMethods
@inject IAuthenticationService authService
@inject NavigationManager navManager
@layout EmptyLayout
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations







 <div id="app">
        <style>
            @@-webkit-keyframes slide {
                0% {
                    transform: translateX(-25%);
                }

                100% {
                    transform: translateX(25%);
                }
            }

        .btn-bd-primary {
            font-weight: 600;
            color: white;
            background-color: #5f2fdc; /* Violet */
            border-color: #5f2fdc;
        }

            .btn-bd-primary:hover {
                color: white;
                background-color: #5f2fdc; /* 10% mugdi ka badan */
                border-color: #5a379e;
            }

            .btn-bd-primary:focus {
                box-shadow: 0 0 0 0.25rem rgba(111, 66, 193, 0.5);
            }

            .btn-bd-primary:active {
                color: white;
                background-color: #5f2fdc; /* 20% mugdi ka badan */
                border-color: #4c2f84;
            }



            .mud-wasm {
                animation: slide 3s ease-in-out infinite alternate;
                background-image: linear-gradient(-60deg,#A890E3 50%,#7454DC 50%);
                bottom: 0;
                left: -50%;
                opacity: .5;
                position: fixed;
                right: -50%;
                top: 0;
                z-index: -1
            }

            .mud-wasm-cont {
                left: 50%;
                padding: 10vmin;
                position: fixed;
                text-align: center;
                top: 50%;
                transform: translate(-50%,-50%)
            }
        </style>
        <div style="height:100%;width:100%;margin:0;position:fixed;">
            <div class="mud-wasm"></div>
            <div class="mud-wasm" style="animation-direction:alternate-reverse;animation-duration:4s;"></div>
            <div class="mud-wasm" style="animation-duration:5s;"></div>
         


            


    <div class="container">
        <div class="row justify-content-center">



                <div class="brand-logo text-center" style="margin-top:-8%">

                <img class="logo-light logo-img logo-img-lg" src="images/sahal_logo_white.png" alt="logo" width="450" height="450">

            </div>









            <div class="col-12 col-md-9 col-lg-7 col-xl-6 col-xxl-5" style="margin-top:-10%;">
                <div class="card border-0 shadow-sm rounded-4">
                    <div class="card-body p-3 p-md-4 p-xl-5">
                        <div class="row">
                            <div class="col-12">
                               
                            </div>
                        </div>



                        @message


                        <EditForm Model="@LoginModel" OnValidSubmit="HandleLogin">
                            <DataAnnotationsValidator />
                            <ValidationSummary />


                            <div class="form-group">
                                <label for="email">Email</label>
                                  
                                <InputText id="Email" class="form-control" @bind-Value="LoginModel.Email" />
                                <ValidationMessage For="@(() => LoginModel.Email)" />
                            </div>



                            <br />
                            <div class="form-group">
                                <label class="form-label" for="password">Passcode</label>
                               
                                <InputText id="Password" type="password" class="form-control" @bind-Value="LoginModel.Password" />
                                <ValidationMessage For="@(() => LoginModel.Password)" />

                            </div>

                            <br /><br />

                            @if (Loading)
                            {
                                    <div class="row justify-content-center" style="margin-left:30%;">
                                   <div class="col-12">
                                         <div class="d-grid">
                                        <div class="spinner-border text-primary text-center" role="status">
                                                    <span class="visually-hidden justify-content-center" >Loading...</span>
                                        
                                    </div>
                                        <h6 style="margin-left:-10%">Loading Please Wait A Moment</h6>
                                </div>
                                </div>
                                </div>
                            }
                            else {
                                <div class="col-12">
                                    <div class="d-grid">
                                            <button class="btn btn-bd-primary btn-lg" type="submit"> 🔒 Log in now</button>
                                </div>
                            </div>
                            }




                        </EditForm>


























                        <div class="row">
                            <div class="col-12">
                                <hr class="mt-5 mb-4 border-secondary-subtle">
                                <div class="d-flex gap-2 gap-md-4 flex-column flex-md-row justify-content-md-end">
                                    <a href="#!" class="link-secondary text-decoration-none">Create new account</a>
                                    <a href="#!" class="link-secondary text-decoration-none">Forgot password</a>
                                </div>
                            </div>
                        </div>
                      
                    </div>
                </div>
            </div>
        </div>
    </div>




        </div>



    </div>


@code {
    LoginUserDto LoginModel = new LoginUserDto();
    string message = null;

    private bool Loading = false;


    public async Task HandleLogin()
    {
        try
        {
            Loading = true;
            var response = await authService.AuthenticateAsync(LoginModel);

            if (response)
            {
                Loading = false;
                navManager.NavigateTo("/");
            }
            else
            {
                Loading = false;
                message = "Invalid Creditianls";
                Console.WriteLine(message);
            }
        }
        catch (Exception ex)
        {
            Loading = false;
            message = "Invalid Creditianls";
            Console.WriteLine(message);
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

}
